<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deploy NGINX infrastructure using Terraform on Nginx Experience</title>
    <link>/020_terraform/</link>
    <description>Recent content in Deploy NGINX infrastructure using Terraform on Nginx Experience</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Jul 2020 14:37:59 +0300</lastBuildDate><atom:link href="/020_terraform/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Terraform Apply</title>
      <link>/020_terraform/010_terraform_apply_1/</link>
      <pubDate>Wed, 08 Jul 2020 14:37:59 +0300</pubDate>
      
      <guid>/020_terraform/010_terraform_apply_1/</guid>
      <description> Go to the &amp;ldquo;terraform&amp;rdquo; directory where we can find the terraform plan.  cd terraform Run the following commands, terraform plan will show us what it is going to be deployed in Azure by Terraform:  terraform init terraform plan Now let&amp;rsquo;s deploy the environment  terraform apply --auto-approve It will take around 10 minutes for Terraform and Azure to finish the initial deployment.
</description>
    </item>
    
    <item>
      <title>AKS Verification</title>
      <link>/020_terraform/030_aks_verification_1/</link>
      <pubDate>Wed, 08 Jul 2020 14:37:59 +0300</pubDate>
      
      <guid>/020_terraform/030_aks_verification_1/</guid>
      <description>Wait for Terraform to finish and verify the deployment is working as expected and we are able to control the Kubernetes environment.
 We need to save the remote access config for the Kubernetes cluster locally:  mkdir ~/.kube/terraform output kube_config | sed &#39;1d;$d&#39; &amp;gt; ~/.kube/configCheck and see that our cluster is up an running. Below we should see our two K8s worker nodes:  kubectl get nodesOutput</description>
    </item>
    
  </channel>
</rss>
